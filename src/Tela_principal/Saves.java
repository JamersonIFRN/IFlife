/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Tela_principal;

import TFasePrincipal.BonusGanhos;
import TFasePrincipal.Tela;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author DANIEL
 */
public class Saves extends javax.swing.JFrame {

    /**
     * Creates new form Saves
     */
    public Saves() {
        initComponents();
        setIconImage(new ImageIcon("Res/logoBarra.png").getImage());
        setLocationRelativeTo(null);
        jLabel1.setIcon(new ImageIcon("Res/logojogosextras.png"));
        String arquivo = "Res/Dados.txt", ficha, f = "";
        try {
            FileReader fr = new FileReader(arquivo);
            BufferedReader br = new BufferedReader(fr);
            try {
                while (br.ready()) {
                    ficha = "";
                    ficha += br.readLine();
                    if (!ficha.equals("")) {
                        f += ficha + "\n";
                    }
                }
                if (!f.equals("")) {
                } else {
                    jButton6.setEnabled(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jRadioButton2.setFont(new java.awt.Font("Vrinda", 1, 28)); // NOI18N
        jRadioButton2.setText("Slot 1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Saves");
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(215, 254, 215));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jButton4.setFont(new java.awt.Font("Vrinda", 1, 20)); // NOI18N
        jButton4.setText("Voltar");
        jButton4.setToolTipText("Voltar ao Menu Principal");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Vrinda", 1, 20)); // NOI18N
        jButton5.setText("Novo");
        jButton5.setToolTipText("Zerar jogo e começar outro");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Vrinda", 1, 20)); // NOI18N
        jButton6.setText("Continuar");
        jButton6.setToolTipText("Continuar o jogo");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton5))
                    .addComponent(jButton6))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(193, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(183, 183, 183))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int começar = JOptionPane.showConfirmDialog(null, "Deseja começar novo jogo?\nCaso haja jogo salvo ele será deletado.", "Novo Jogo", JOptionPane.YES_NO_OPTION);
        if (começar == 0) {
            Zerartudo z = new Zerartudo();
            z.zerar();
            TelaInstrução telaInstrução = new TelaInstrução();
            String caminhoarquivo = "Res/Arquivos instrução/instrucoes iniciais.txt";
            String linha, textotxt = "";
            FileReader fr;
            try {
                fr = new FileReader(caminhoarquivo);
                BufferedReader br = new BufferedReader(fr);
                try {
                    while (br.ready()) {
                        linha = "";
                        linha += br.readLine();
                        if (!linha.equals("")) {
                            textotxt += linha + "\n";
                        }
                    }
                    br.close();
                    fr.close();
                } catch (IOException ex) {
                    Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[] textotelainstrução = textotxt.split("@");
            String textoEIcone[] = textotelainstrução[0].split("-");
            telaInstrução.setTexto(textoEIcone[0], textoEIcone[1], textoEIcone[2]);
            telaInstrução.setProximaTela("instruçãoprova");
            telaInstrução.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Principal p = new Principal();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        String arquivo = "Res/Dados.txt", arquivo2 = "Res/Save.txt", ficha = "", ano, f = "";
        try {
            FileReader fr = new FileReader(arquivo);
            BufferedReader br = new BufferedReader(fr);
            try {
                while (br.ready()) {
                    ficha = "";
                    ficha += br.readLine();
                    if (!ficha.equals("")) {
                        f += ficha + "\n";
                    }
                }
                if (!f.equals("")) {
                    f = f.substring(0, f.length() - 1);
                }
            } catch (IOException ex) {
                Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
        }
        ano = ficha;
        String dados[] = f.split("\n");
        f = "";
        if (dados.length <= 3) {
            EscolhaPesonagem es = new EscolhaPesonagem();
            es.setVisible(true);
            dispose();
        } else {
            try {
                FileReader fr = new FileReader(arquivo2);
                BufferedReader br = new BufferedReader(fr);
                try {
                    while (br.ready()) {
                        ficha = "";
                        ficha += br.readLine();
                        if (!ficha.equals("")) {
                            f += ficha + "\n";
                        }
                    }
                    if (!f.equals("")) {
                        f = f.substring(0, f.length() - 1);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
            }
            String tela[] = f.split("@");
            if (tela[0].equals("bonus")) {
                BonusGanhos bonus = new BonusGanhos(ano);
                bonus.setVisible(true);
                dispose();
            } else if (tela[0].equals("formou")) {
                Formou formou = new Formou();
                formou.setVisible(true);
                dispose();
            } else if (tela[0].equals("fase")) {
                Tela t = new Tela(true);
                t.setVisible(true);
                dispose();
            } else {
                TelaInstrução telaInstrução = new TelaInstrução();
                arquivo = "Res/Arquivos instrução/instrucoes iniciais.txt";
                String linha, textotxt = "";
                FileReader fr;
                try {
                    fr = new FileReader(arquivo);
                    BufferedReader br = new BufferedReader(fr);
                    try {
                        while (br.ready()) {
                            linha = "";
                            linha += br.readLine();
                            if (!linha.equals("")) {
                                textotxt += linha + "\n";
                            }
                        }
                        br.close();
                        fr.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Saves.class.getName()).log(Level.SEVERE, null, ex);
                }

                String[] textotelainstrução = textotxt.split("@");
                String textoEIcone[] = textotelainstrução[1].split("-");
                telaInstrução.setTexto(textoEIcone[0], textoEIcone[1], textoEIcone[2]);
                telaInstrução.setProximaTela("instruçãolab");
                telaInstrução.setVisible(true);
                dispose();
            }
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Saves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Saves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Saves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Saves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Saves().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton2;
    // End of variables declaration//GEN-END:variables
}

class ColoredJOptionPane extends JOptionPane {

    public ColoredJOptionPane() {
    }

    public ColoredJOptionPane(Color c) {
        UIManager.put("OptionPane.background", c);
        UIManager.put("Panel.background", c);
        UIManager.put("Button.background", c);
    }
}
