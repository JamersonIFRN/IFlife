package TFasePrincipal;

import Forca.ForcaJogo;
import Tela_principal.Principal;
import Prova.Prova;
import Tela_principal.Formou;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DANIEL
 */
public class SePassou extends javax.swing.JFrame {

    boolean passouNasMaterias[];
    String materias[];
    boolean passou = false;
    String ano = "";
    String linha = "", textotxt = "";

    /**
     * Creates new form SePassou
     */
    public SePassou() {
        initComponents();
        jButton2.setVisible(false);
        setIconImage(new ImageIcon("Res/logoBarra.png").getImage());
        setLocationRelativeTo(null);
        getContentPane().setBackground(Color.white);
        jLabel2.setIcon(new ImageIcon("Res/logojogosextras.png"));
        String caminhoarquivo = "Res/Dados.txt";
        FileReader fr;
        try {
            fr = new FileReader(caminhoarquivo);
            BufferedReader br = new BufferedReader(fr);
            try {
                while (br.ready()) {
                    linha = "";
                    linha += br.readLine();
                    if (!linha.equals("")) {
                        textotxt += linha + "\n";
                    }
                }
                br.close();
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(Prova.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Prova.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (linha.equals("1")) {
            ano = "2";
            liberarJogo("1");
        } else if (linha.equals("2")) {
            ano = "3";
            liberarJogo("2");
        } else if (linha.equals("3")) {
            ano = "4";
            liberarJogo("3");
        } else {
            liberarJogo("4");
        }
    }

    public void TestePassou() {
        int materiasreprovadas = 0;
        for (int i = 0; i < materias.length; i++) {
            if (passouNasMaterias[i]) {
            } else {
                materiasreprovadas++;
            }
        }
        if (materiasreprovadas > 3) {
            jLabel1.setText("Você não passou de ano.");
            jButton2.setBounds(150, 290, jButton2.getWidth(), jButton2.getHeight());
            jButton1.setBounds(145 + jButton2.getWidth() + 15, 290, jButton1.getWidth() + 20, jButton1.getHeight());
            jButton2.setVisible(true);
        } else {
            passou = true;
            jLabel1.setText("Parabéns você passou de ano.");
        }
    }

    public void setPassou(boolean[] passouNasMaterias) {
        this.passouNasMaterias = passouNasMaterias;
        TestePassou();
    }

    public void setMaterias(String[] materias) {
        this.materias = materias;
    }

    public void setNMaterias(int numerosDeMaterias) {
        passouNasMaterias = new boolean[numerosDeMaterias];
        materias = new String[numerosDeMaterias];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(215, 254, 215));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(12, 217, 630, 62);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setText("Continuar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(255, 290, 170, 37);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(200, 10, 259, 186);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setText("Voltar ao jogo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(40, 290, 210, 37);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (passou) {
            if (!linha.equals("4")) {
                String mda[] = textotxt.split("\n");
                String arquivo = "Res/Dados.txt";
                FileWriter fw;
                try {
                    fw = new FileWriter(arquivo);
                    BufferedWriter bw = new BufferedWriter(fw);
                    bw.write(mda[0] + "\n" + mda[1] + "\n" + mda[2] + "\n" + mda[3] + "\n" + ano);
                    bw.close();
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(SePassou.class.getName()).log(Level.SEVERE, null, ex);
                }
                BonusGanhos bn = new BonusGanhos(ano);
                bn.setVisible(true);
                arquivo = "Res/Save.txt";
                try {
                    fw = new FileWriter(arquivo);
                    BufferedWriter bw = new BufferedWriter(fw);
                    bw.write("bonus");
                    bw.close();
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Fase.class.getName()).log(Level.SEVERE, null, ex);
                }

                arquivo = "Res/Dados/NumeroBonus.txt";
                linha = "";
                textotxt = "";
                FileReader fr1;
                try {
                    fr1 = new FileReader(arquivo);
                    BufferedReader br1 = new BufferedReader(fr1);
                    try {
                        while (br1.ready()) {
                            linha = "";
                            linha += br1.readLine();
                            if (!linha.equals("")) {
                                textotxt += linha + "\n";
                            }
                        }
                        textotxt = textotxt.substring(0, textotxt.length() - 1);
                        br1.close();
                        fr1.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Prova.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Prova.class.getName()).log(Level.SEVERE, null, ex);
                }
                String[] bonus = textotxt.split("@");
                if (Integer.parseInt(bonus[0]) < 3) {
                    FileWriter fw1;
                    try {
                        fw1 = new FileWriter(arquivo);
                        BufferedWriter bw1 = new BufferedWriter(fw1);
                        bw1.write((Integer.parseInt(bonus[0]) + 1) + "@" + Integer.parseInt(bonus[1]));
                        bw1.close();
                        fw1.close();
                    } catch (IOException ex) {
                        Logger.getLogger(SePassou.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (Integer.parseInt(bonus[1]) < 3) {
                    FileWriter fw1;
                    try {
                        fw1 = new FileWriter(arquivo);
                        BufferedWriter bw1 = new BufferedWriter(fw1);
                        bw1.write(Integer.parseInt(bonus[0]) + "@" + (Integer.parseInt(bonus[1]) + 1));
                        bw1.close();
                        fw1.close();
                    } catch (IOException ex) {
                        Logger.getLogger(SePassou.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                String arquivo = "Res/Save.txt";
                FileWriter fw;
                try {
                    fw = new FileWriter(arquivo);
                    BufferedWriter bw = new BufferedWriter(fw);
                    bw.write("formou");
                    bw.close();
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Fase.class.getName()).log(Level.SEVERE, null, ex);
                }
                Formou f = new Formou();
                f.setVisible(true);
                dispose();
            }

        } else {
            setarInicio();
            Principal p = new Principal();
            p.setVisible(true);
        }
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Tela t = new Tela(false);
        t.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SePassou.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SePassou.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SePassou.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SePassou.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SePassou().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public boolean verSeJaLiberou(String jogo) {
        String arquivo = "Res/Dados//JogosDesbloqueados.txt", lin, f = "";
        try {
            FileReader fr = new FileReader(arquivo);
            BufferedReader br = new BufferedReader(fr);
            try {
                while (br.ready()) {
                    lin = "";
                    lin += br.readLine();
                    if (!lin.equals("")) {
                        f += lin + "\n";
                    }
                }
                if (!f.equals("")) {
                    f = f.substring(0, f.length() - 1);
                }
            } catch (IOException ex) {
                Logger.getLogger(SePassou.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SePassou.class.getName()).log(Level.SEVERE, null, ex);
        }
        String jogos[] = f.split("-");
        int j = 0;
        for (int i = 0; i < jogos.length; i++) {
            if (jogos[i].equals(jogo)) {
                j++;
            }
        }
        if (j == 0) {
            return true;
        }
        return false;
    }

    private void liberarJogo(String ano) {
        String arquivo = "Res/Dados/JogosDesbloqueados.txt";
        String jogo = "";
        switch (ano) {
            case "1":
                if (verSeJaLiberou("memoria")) {
                    jogo = "-memoria";
                }
                break;
            case "2":
                if (verSeJaLiberou("forca")) {
                    jogo = "-forca";
                }
                break;
            case "3":
                if (verSeJaLiberou("erro")) {
                    jogo = "-erro";
                }
                break;
            case "4": {
                if (verSeJaLiberou("sudoku")) {
                    jogo = "-sudoku";
                }
            }
            break;
        }
        FileWriter fw;
        try {
            fw = new FileWriter(arquivo, true);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(jogo);
            bw.close();
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(ForcaJogo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setarInicio() {
        String caminhoarquivo = "Res/Dados/InicioTela.txt";
        String linha = "", textotxt = "";
        FileReader fr;
        try {
            fr = new FileReader(caminhoarquivo);
            BufferedReader br = new BufferedReader(fr);
            try {
                while (br.ready()) {
                    linha = "";
                    linha += br.readLine();
                    if (!linha.equals("")) {
                        textotxt += linha + "\n";
                    }
                }
                textotxt = textotxt.substring(0, textotxt.length() - 1);
                br.close();
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(ImagemMasculinoOuFeminino.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ImagemMasculinoOuFeminino.class.getName()).log(Level.SEVERE, null, ex);
        }
        caminhoarquivo = "Res/Save.txt";
        FileWriter fw;
        try {
            fw = new FileWriter(caminhoarquivo);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(textotxt);
            bw.close();
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(SePassou.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
